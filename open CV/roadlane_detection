import cv2
import numpy as np
import matplotlib.pylab as plt


def region_of_interest(img, vertices):
    mask = np.zeros_like(img)
    # channel_count = img.shape[2]
    match_mask_color = 255
    cv2.fillPoly(mask, vertices, match_mask_color)
    masked_image = cv2.bitwise_and(img, mask)
    # cv2.imshow('img',  masked_image)
    # cv2.waitKey(0)
    # cv2.destroyAllWindows
    return masked_image


def drow_the_lines(img, lines):
    img = np.copy(img)
    blank_image = np.zeros((img.shape[0], img.shape[1], 3), dtype=np.uint8)

    for line in lines:
        for x1, y1, x2, y2 in line:
            cv2.line(blank_image, (x1, y1), (x2, y2), (0, 255, 0), thickness=3)

    img = cv2.addWeighted(img, 0.8, blank_image, 1, 0.0)
    return img


img = cv2.imread('roadlane1.jpg')
img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

# cv2.imshow('rbg', img)

print(img.shape)
height = img.shape[0]
width = img.shape[1]

region_of_interest_vertices = [
    (0, height),
    (325, 350),
    (425, 355),
    (700, height)
]


gray = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)
canny = cv2.Canny(gray, 220, 255)

# cv2.imshow('edges', canny)

cropped_image = region_of_interest(canny,
                                   np.array([region_of_interest_vertices], np.int32),)

lines = cv2.HoughLinesP(cropped_image,
                        rho=6,
                        theta=np.pi/180,
                        threshold=160,
                        lines=np.array([]),
                        minLineLength=40,
                        maxLineGap=25)

image_with_lines = drow_the_lines(img, lines)
plt.imshow(image_with_lines)
# plt.imshow(img)
plt.show()
